给定一个二叉树，返回其节点值自底向上的层序遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其自底向上的层序遍历为：

[
  [15,7],
  [9,20],
  [3]
]

代码示意：
一、BFS
var levelOrderBottom = function(root) {
    if(!root) return [];
    let ans=[],queue=[root];
    while(queue.length){
        let cur = [];
        let temp = [];
        while(queue.length){
            let node = queue.shift();
            cur.push(node.val);
            if(node.left) temp.push(node.left);
            if(node.right) temp.push(node.right);
        }
        ans.unshift(cur);
        queue = temp;
    }
    return ans;
};
二、DFS
var levelOrderBottom = function(root) {
    if(!root) return [];
    let ans = [];
    var dfs =function(node,depth){
        if(!node) return ;
        ans[depth] = ans[depth]?ans[depth] : [];
        ans[depth].push(node.val);
        dfs(node.left,depth+1);
        dfs(node.right,depth+1);
    }
    dfs(root,0);
    return ans.reverse();
};
