给定一个二叉树，找出其最大深度。

二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。

说明: 叶子节点是指没有子节点的节点。

示例：
给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。

代码示意：
一、递归（DFS）
var maxDepth = function(root) {
    if(!root) return 0;
    let leftDepth = maxDepth(root.left);
    let rightDepth = maxDepth(root.right);

    return 1+Math.max(leftDepth,rightDepth);
};
二、迭代（BFS）
var maxDepth = function(root) {
    if(!root) return 0;
    let  count=0,queue=[root];
    while(queue.length){
        let temp = [];
        while(queue.length){
            let node = queue.shift();
            if(node.left) temp.push(node.left);
            if(node.right) temp.push(node.right);
        }
        queue = temp;
        count++;
    }
    return count;
};


